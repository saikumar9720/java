I/O: Input / Output 

Write a file using Streams: FileOutputStream 

import java.io.FileOutputStream;

public class FileOutputStreamDemo {
	
	public static void main(String[] args) {
		
		String description= "Java BufferedOutputStream class is used for buffering an output stream. It internally uses buffer to store data. It adds more efficiency than to write data directly into a stream. So, it makes the performance fast.";
		
		try {
			FileOutputStream fos= new FileOutputStream("abc.txt");
			 byte bytes[]=description.getBytes();
			 fos.write(bytes);
			 fos.flush();
			 fos.close();
			 System.out.println("done");
		}
		catch(Exception e) {
			System.out.println(e);
		}
		
		
	}

}


FileInputStream:

import java.io.FileInputStream;

public class FileInputStremDemo {
	
	public static void main(String[] args) {
		
		try {
			
			FileInputStream fis = new FileInputStream("index.txt");
			int i =0;
			while((i=fis.read()) != -1) {
				System.out.print((char)i);
			}
		}
		catch(Exception e) {
			System.out.println(e);
		}
		
		
	}

}



Problem Statement: 

Create a file , write the data to it and read the data once the data is available.


Step 1:  create file, write data to it. 

Step 2: read the file and display content.


import java.io.FileInputStream;
import java.io.FileOutputStream;

public class FileReadandWrite {
	
	public static void main(String[] args) {
		
String description= "y than to write data directly into a stream. So, it makes the performance fast.";
		
		try {
			FileOutputStream fos= new FileOutputStream("test1.txt");
			FileInputStream fis = new FileInputStream("test1.txt");
			 byte bytes[]=description.getBytes();
			 fos.write(bytes);
			 fos.flush();
			 fos.close();
			 int i =0;
				while((i=fis.read()) != -1) {
					System.out.print((char)i);
				}
				
				fis.close();
		}
		catch(Exception e) {
			System.out.println(e);
		}
		
		
	}

}

FileReader:

import java.io.FileReader;

public class FileReaderDemo {

	public static void main(String[] args) {
		
		try {
			FileReader fr= new FileReader("demo.txt");
			int i=0; 
			while((i = fr.read()) != -1) {
				 System.out.print((char)i);
			}
			
		}
		catch(Exception e) {
			System.out.println(e);
		}
	}
}


import java.io.FileWriter;

public class FileWriterDemo {

	public static void main(String[] args) {
		
		try {
			FileWriter fw = new FileWriter("demo.txt");
			fw.write("hello! how are you doing?");
			fw.flush();
			fw.close();
			System.out.println("done");
		}
		catch(Exception e) {
			 System.out.println(e);
		}
		
	}
	
}
